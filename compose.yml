services:
  app:
    container_name: setup-app
    build:
      context: .
      dockerfile: ./devops/php/Dockerfile
    restart: unless-stopped
    volumes:
      - .:/var/www/html
    networks:
      - setup-network
    depends_on:
      mysql:
        condition: service_healthy

  nginx:
    container_name: setup-webserver
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - '8080:80'
    volumes:
      - .:/var/www/html
      - ./devops/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - setup-network
    extra_hosts:
      - 'setup.test:host-gateway'

  mysql:
    container_name: setup-database
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: setup
      MYSQL_PASSWORD: setup
      MYSQL_USER: setup
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3310:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - setup-network

  redis:
    container_name: setup-redis
    image: redis:alpine
    networks:
      - setup-network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  setup-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
